<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAdWdRAGJiYgBlZWUAa2trAH53awBzc3MAd3d3AHp6egB9fX0AvHAQAKBwMwDSdQAA0ngAANR6
        AADVfQAA2H8AALyCLQDVgwIA2oQDANuJBwDXhgwA2IcIANeJDQDZiAgA3YwLANqLDADVhxEA2o0TANuP
        HQDekRcA3pQcAOKDAADniwIA4I4KAOCUFQDIhiUA15AhANqSJgDdlSUA2pUrAN6aMgDenTIA3po0AN2c
        NwDTmzsA4Z4tAOCcMADgnTcA4aAsAPChIQDkojYA4KE5AOKhPwDoqT4A7K49AJaDcACZinYAuZ97AMWX
        VQDaokkA2KFMANqqXQDnq0IA5KlOAOmtSQD1t0kA9LtPAOGpVQDntVIA7rNRAOq3UQDuuVcA6LFcAMap
        fQDdtHMA5LBhAOi2aQDhtXEA6r9/AP7EVwDuwWsA+sdiAP7JYgD/ymYA/8xlAP7NaQD4zm8A/81tAP/Q
        bwDtx3cA8MNwAP/ScgD/1HMA/dJ1AP/UdQD/1XkA/tZ9AIODgwCIiIgAjY2NAIuNkACRkZEAk5OUAJWV
        lQCZmZkAmpudAJ6dnQCpnIwArqGMAKqlngChoaEAoqSnAKWlpQCsqKEAqampAKmrrwCtra0AsrKyALW1
        tQC2uLoAurq6AL29vQDHrYMAxbGSAMO0ngDDtqQAxLmpAMC/vgDdw5kA6cSKAPLJggD1z4cA/9WBAP/W
        hQD/2oIA/9mFAP/chAD20IgA89WNAP/eiwD/3YwA6caRAObImgD825MA9t6eAP/hlwD/5JYA9uKaAPzl
        nQD/6J8AzsCrAN7KrADczbcA1cy8ANrMuQDpzaMA6NCrAP/foADk0rUA79m4APLZsgD/46EA/+mlAPvi
        rAD/7asA+eqsAP/trAD/57YA/uqyAPfjvgD/6rwA/+y8AP/yswD79LkA//W5AP/xvQC/wMAAwMDAAMXF
        xQDGyMgAysrKAMrMzADNzc0AyM7YAM7Q0ADR0tIA0NLVANLU1ADV1dUA2tfVANfZ2QDV2d4A2dnZANzb
        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
        AAf/wAAP/8AAH//8AH////3/
</value>
  </data>
</root>